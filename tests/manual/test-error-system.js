// –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
// –í—Å—Ç–∞–≤–ª—è–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã –ø–æ –æ–¥–Ω–æ–π –≤ –∫–æ–Ω—Å–æ–ª—å –±—Ä–∞—É–∑–µ—Ä–∞

console.log("üß™ –°–∏—Å—Ç–µ–º–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—à–∏–±–æ–∫ –∑–∞–≥—Ä—É–∂–µ–Ω–∞");
console.log("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:");
console.log("  testNotifications() - —Ç–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π");
console.log("  testValidation() - —Ç–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏");
console.log("  testApiErrors() - —Ç–µ—Å—Ç API –æ—à–∏–±–æ–∫");
console.log("  runQuickTest() - –±—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç");
console.log("");

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function testNotifications() {
    console.log("üì¢ –¢–µ—Å—Ç–∏—Ä—É–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...");

    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ (–µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≥–ª–æ–±–∞–ª—å–Ω–æ)
    try {
        const { showSuccess, showError, showWarning, showInfo } =
            window.useGlobalErrorHandler?.() || {};

        if (showSuccess) {
            showSuccess("‚úÖ –¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è!");
            setTimeout(() => showError("‚ùå –¢–µ—Å—Ç –æ—à–∏–±–∫–∏!"), 1500);
            setTimeout(() => showWarning("‚ö†Ô∏è –¢–µ—Å—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è!"), 3000);
            setTimeout(() => showInfo("‚ÑπÔ∏è –¢–µ—Å—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏!"), 4500);

            console.log("‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∑–∞–ø—É—â–µ–Ω—ã");
        } else {
            console.log("‚ùå –§—É–Ω–∫—Ü–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω—ã");
        }
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:", error);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
function testValidation() {
    console.log("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤–∞–ª–∏–¥–∞—Ü–∏—é...");

    // –ù–∞–π–¥–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∑–∞–∫–∞–∑–∞
    const orderButton =
        document.querySelector('button:contains("–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑")') ||
        document.querySelector('[class*="order"]') ||
        document.querySelector("button");

    if (orderButton) {
        console.log("üéØ –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –∑–∞–∫–∞–∑–∞, –∫–ª–∏–∫–∞–µ–º...");
        orderButton.click();

        setTimeout(() => {
            const submitButton = document.querySelector(
                'button:contains("–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑")',
            );
            if (submitButton) {
                console.log("üìù –ü—Ä–æ–±—É–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—É—Å—Ç—É—é —Ñ–æ—Ä–º—É...");
                submitButton.click();
            }
        }, 1000);
    } else {
        console.log("‚ùå –ö–Ω–æ–ø–∫–∞ –∑–∞–∫–∞–∑–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞");
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫ API
function testApiErrors() {
    console.log("üåê –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É API –æ—à–∏–±–æ–∫...");

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–∏–ø—ã –æ—à–∏–±–æ–∫
    const testUrls = [
        "/api/test-404", // 404 –æ—à–∏–±–∫–∞
        "/api/test-500", // 500 –æ—à–∏–±–∫–∞
        "/api/test-422", // 422 –≤–∞–ª–∏–¥–∞—Ü–∏—è
    ];

    testUrls.forEach((url, index) => {
        setTimeout(() => {
            fetch(url)
                .then((response) => {
                    if (!response.ok) {
                        console.log(
                            `üì° –ü–æ–ª—É—á–µ–Ω–∞ –æ—à–∏–±–∫–∞ ${response.status} –¥–ª—è ${url}`,
                        );
                    }
                })
                .catch((error) => {
                    console.log(`üîå –°–µ—Ç–µ–≤–∞—è –æ—à–∏–±–∫–∞ –¥–ª—è ${url}:`, error.message);
                });
        }, index * 1000);
    });
}

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
function runAllTests() {
    console.log("üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å–µ —Ç–µ—Å—Ç—ã...");

    testNotifications();

    setTimeout(() => {
        testValidation();
    }, 2000);

    setTimeout(() => {
        testApiErrors();
    }, 4000);

    console.log(
        "‚è±Ô∏è –¢–µ—Å—Ç—ã –∑–∞–ø—É—â–µ–Ω—ã, —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –±—É–¥—É—Ç —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥...",
    );
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å
window.testErrorSystem = {
    runAllTests,
    testNotifications,
    testValidation,
    testApiErrors,
};

console.log("–¢–µ—Å—Ç–æ–≤—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –≥–æ—Ç–æ–≤—ã!");
console.log("üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:");
console.log("   testErrorSystem.runAllTests() - –∑–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç—ã");
console.log("   testErrorSystem.testNotifications() - —Ç–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π");
console.log("   testErrorSystem.testValidation() - —Ç–µ—Å—Ç –≤–∞–ª–∏–¥–∞—Ü–∏–∏");
console.log("   testErrorSystem.testApiErrors() - —Ç–µ—Å—Ç API –æ—à–∏–±–æ–∫");
console.log("");
console.log("üéØ –î–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ: testErrorSystem.runAllTests()");
og;

// –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
function runQuickTest() {
    console.log("üöÄ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã...");

    // –¢–µ—Å—Ç 1: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
    const testDiv = document.createElement("div");
    testDiv.style.cssText = `
        position: fixed; top: 20px; right: 20px; z-index: 9999;
        background: #10B981; color: white; padding: 15px 20px;
        border-radius: 8px; box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        font-family: Arial, sans-serif;
    `;
    testDiv.innerHTML = "‚úÖ –¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç!";
    document.body.appendChild(testDiv);

    setTimeout(() => testDiv.remove(), 3000);
    console.log("‚úÖ –¢–µ—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∑–∞–ø—É—â–µ–Ω");

    // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
    const orderButton = document.querySelector("button");
    if (orderButton) {
        console.log("‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è");
    } else {
        console.log("‚ùå –ö–Ω–æ–ø–∫–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã");
    }

    // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –æ—à–∏–±–æ–∫
    try {
        if (window.axios) {
            console.log("‚úÖ Axios –∑–∞–≥—Ä—É–∂–µ–Ω");
        } else {
            console.log("‚ùå Axios –Ω–µ –Ω–∞–π–¥–µ–Ω");
        }
    } catch (e) {
        console.log("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ Axios:", e.message);
    }

    console.log("üéØ –ë—ã—Å—Ç—Ä—ã–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω");
}

// –≠–∫—Å–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π
window.testNotifications = testNotifications;
window.testValidation = testValidation;
window.testApiErrors = testApiErrors;
window.runQuickTest = runQuickTest;
window.runAllTests = runAllTests;
